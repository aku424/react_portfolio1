{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/takashimatakuto/Documents/programming/react_portfolio1/src/components/Game.jsx\";\nimport React from 'react';\nimport Number from './Number';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addCount = () => {\n      this.setState({\n        count: this.state.count + 1\n      });\n    };\n\n    this.toggleSmile = () => {\n      if ((this.state.count + 1) % 3 === 0) {\n        this.setState({\n          isSmile: true,\n          smileNumber: this.state.smileNumber + 1\n        });\n      } else if (this.state.count - 9 === 3 && this.state.count > 10) {\n        this.setState({\n          isSmile: true,\n          smileNumber: this.state.smileNumber + 1\n        });\n      } else if (this.state.count - 19 === 3 && this.state.count > 20) {\n        this.setState({\n          isSmile: true,\n          smileNumber: this.state.smileNumber + 1\n        });\n      } else if (this.state.count >= 30 && this.state.count < 39) {\n        this.setState({\n          isSmile: true,\n          smileNumber: this.state.smileNumber + 1\n        });\n      } else {\n        this.setState({\n          isSmile: false\n        });\n      }\n    };\n\n    this.toggleFinished = () => {\n      if (this.state.count === 40) {\n        this.setState({\n          isFinished: true\n        });\n      } else {\n        this.setState({\n          isFinished: false\n        });\n      }\n    };\n\n    this.state = {\n      count: 1,\n      isSmile: false,\n      smileNumber: -1,\n      isFinished: false\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.state.count >= 41) {\n      this.setState({\n        count: 0,\n        smileNumber: -1\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"gameTitle\",\n        children: \"\\u4E16\\u754C\\u306E\\u30BF\\u30AF\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"gameText\",\n        children: \"\\u301C \\u4ECA\\u306F\\u7121\\u304D\\u4E16\\u754C\\u306E\\u30AA\\u30E2\\u30ED\\u30FCver.\\u30BF\\u30AF\\u30C8 \\u301C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), \"p.gabe\", /*#__PURE__*/_jsxDEV(Number, {\n        count: this.state.count,\n        add: () => {\n          this.addCount();\n        },\n        toggleSmile: () => {\n          this.toggleSmile();\n        },\n        isSmile: this.state.isSmile,\n        isFinished: this.state.isFinished,\n        toggleFinished: () => {\n          this.toggleFinished();\n        },\n        number: this.state.smileNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/takashimatakuto/Documents/programming/react_portfolio1/src/components/Game.jsx"],"names":["React","Number","Game","Component","constructor","props","addCount","setState","count","state","toggleSmile","isSmile","smileNumber","toggleFinished","isFinished","componentDidUpdate","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Number from './Number';\n\n\nclass Game extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            count:1,\n            isSmile:false,\n            smileNumber:-1,\n            isFinished :false\n        }\n    }\n    \n    \n    componentDidUpdate(){\n        if(this.state.count >=41){\n            this.setState({\n                count:0,\n                smileNumber:-1\n            })\n        }\n    }\n    addCount = ()=>{\n        this.setState({\n            count : this.state.count+1\n        });\n    }\n    toggleSmile=()=>{\n        if((this.state.count+1) % 3 === 0){\n            this.setState({\n                isSmile:true,\n                smileNumber:this.state.smileNumber + 1\n            })\n        }else if((this.state.count-9) === 3 && this.state.count >10 ){\n            this.setState({\n                isSmile:true,\n                smileNumber:this.state.smileNumber + 1\n            })\n        }else if((this.state.count-19) === 3 && this.state.count >20 ){\n            this.setState({\n                isSmile:true,\n                smileNumber:this.state.smileNumber + 1\n            })\n        }else if(this.state.count >=30 && this.state.count <39){\n            this.setState({\n                isSmile:true,\n                smileNumber:this.state.smileNumber + 1\n            })\n        }\n        else{\n            this.setState({\n                isSmile:false\n            })\n        }\n    }\n    toggleFinished=()=>{\n        if(this.state.count === 40){\n            this.setState({\n                isFinished:true\n            })\n        }else{\n            this.setState({\n                isFinished:false\n            })\n        }\n    }\n    render(){\n        return(\n            \n            <>\n                <h3 className = \"gameTitle\">世界のタクト</h3>\n                <p className = \"gameText\">〜 今は無き世界のオモローver.タクト 〜</p>\n                p.gabe\n                <Number\n                    count = {this.state.count}\n                    add ={()=>{this.addCount()}}\n                    toggleSmile = {()=>{this.toggleSmile()}}\n                    isSmile = {this.state.isSmile}\n                    isFinished = {this.state.isFinished}\n                    toggleFinished = {()=>{this.toggleFinished()}}\n                    number = {this.state.smileNumber}\n                />\n            </>\n        )\n    }\n}\n\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}