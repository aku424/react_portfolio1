{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/takashimatakuto/Documents/programming/react_portfolio1/src/Main.jsx\";\nimport React from 'react';\nimport Game from './components/Game';\nimport Header from './components/Header';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addCount = () => {\n      this.setState({\n        count: this.state.count + 1\n      });\n    };\n\n    this.toggleSmile = () => {\n      if ((this.state.count + 1) % 3 === 0) {\n        this.setState({\n          isSmile: true\n        });\n      } else if (this.state.count - 9 === 3 && this.state.count > 10) {\n        this.setState({\n          isSmile: true\n        });\n      } else if (this.state.count - 19 === 3 && this.state.count > 20) {\n        this.setState({\n          isSmile: true\n        });\n      } else if (this.state.count >= 30 && this.state.count < 39) {\n        this.setState({\n          isSmile: true\n        });\n      } else {\n        this.setState({\n          isSmile: false\n        });\n      }\n    };\n\n    this.toggleFinished = () => {\n      if (this.state.count === 40) {\n        this.setState({\n          isFinished: true\n        });\n      } else {\n        this.setState({\n          isFinished: false\n        });\n      }\n    };\n\n    this.state = {\n      count: 0,\n      isSmile: false,\n      isFinished: false\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.state.count > 41) {\n      this.setState({\n        count: 0\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/takashimatakuto/Documents/programming/react_portfolio1/src/Main.jsx"],"names":["React","Game","Header","Main","Component","constructor","props","addCount","setState","count","state","toggleSmile","isSmile","toggleFinished","isFinished","componentDidUpdate","render"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAGA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAiBlBC,QAjBkB,GAiBP,MAAI;AACX,WAAKC,QAAL,CAAc;AACVC,QAAAA,KAAK,EAAG,KAAKC,KAAL,CAAWD,KAAX,GAAiB;AADf,OAAd;AAGH,KArBiB;;AAAA,SAsBlBE,WAtBkB,GAsBN,MAAI;AACZ,UAAG,CAAC,KAAKD,KAAL,CAAWD,KAAX,GAAiB,CAAlB,IAAuB,CAAvB,KAA6B,CAAhC,EAAkC;AAC9B,aAAKD,QAAL,CAAc;AACVI,UAAAA,OAAO,EAAC;AADE,SAAd;AAGH,OAJD,MAIM,IAAI,KAAKF,KAAL,CAAWD,KAAX,GAAiB,CAAlB,KAAyB,CAAzB,IAA8B,KAAKC,KAAL,CAAWD,KAAX,GAAkB,EAAnD,EAAuD;AACzD,aAAKD,QAAL,CAAc;AACVI,UAAAA,OAAO,EAAC;AADE,SAAd;AAGH,OAJK,MAIA,IAAI,KAAKF,KAAL,CAAWD,KAAX,GAAiB,EAAlB,KAA0B,CAA1B,IAA+B,KAAKC,KAAL,CAAWD,KAAX,GAAkB,EAApD,EAAwD;AAC1D,aAAKD,QAAL,CAAc;AACVI,UAAAA,OAAO,EAAC;AADE,SAAd;AAGH,OAJK,MAIA,IAAG,KAAKF,KAAL,CAAWD,KAAX,IAAmB,EAAnB,IAAyB,KAAKC,KAAL,CAAWD,KAAX,GAAkB,EAA9C,EAAiD;AACnD,aAAKD,QAAL,CAAc;AACVI,UAAAA,OAAO,EAAC;AADE,SAAd;AAGH,OAJK,MAKF;AACA,aAAKJ,QAAL,CAAc;AACVI,UAAAA,OAAO,EAAC;AADE,SAAd;AAGH;AACJ,KA7CiB;;AAAA,SA8ClBC,cA9CkB,GA8CH,MAAI;AACf,UAAG,KAAKH,KAAL,CAAWD,KAAX,KAAqB,EAAxB,EAA2B;AACvB,aAAKD,QAAL,CAAc;AACVM,UAAAA,UAAU,EAAC;AADD,SAAd;AAGH,OAJD,MAIK;AACD,aAAKN,QAAL,CAAc;AACVM,UAAAA,UAAU,EAAC;AADD,SAAd;AAGH;AACJ,KAxDiB;;AAEd,SAAKJ,KAAL,GAAW;AACPD,MAAAA,KAAK,EAAC,CADC;AAEPG,MAAAA,OAAO,EAAC,KAFD;AAGPE,MAAAA,UAAU,EAAE;AAHL,KAAX;AAKH;;AAGDC,EAAAA,kBAAkB,GAAE;AAChB,QAAG,KAAKL,KAAL,CAAWD,KAAX,GAAkB,EAArB,EAAwB;AACpB,WAAKD,QAAL,CAAc;AACVC,QAAAA,KAAK,EAAC;AADI,OAAd;AAGH;AACJ;;AAyCDO,EAAAA,MAAM,GAAE;AACJ,wBAEI;AAAA,6BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADJ,qBAFJ;AAMH;;AAjE6B;;AAoElC,eAAeb,IAAf","sourcesContent":["import React from 'react';\nimport Game from './components/Game';\nimport Header from './components/Header';\n\n\nclass Main extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            count:0,\n            isSmile:false,\n            isFinished :false\n        }\n    }\n    \n    \n    componentDidUpdate(){\n        if(this.state.count >41){\n            this.setState({\n                count:0\n            })\n        }\n    }\n    addCount = ()=>{\n        this.setState({\n            count : this.state.count+1\n        });\n    }\n    toggleSmile=()=>{\n        if((this.state.count+1) % 3 === 0){\n            this.setState({\n                isSmile:true\n            })\n        }else if((this.state.count-9) === 3 && this.state.count >10 ){\n            this.setState({\n                isSmile:true\n            })\n        }else if((this.state.count-19) === 3 && this.state.count >20 ){\n            this.setState({\n                isSmile:true\n            })\n        }else if(this.state.count >=30 && this.state.count <39){\n            this.setState({\n                isSmile:true\n            })\n        }\n        else{\n            this.setState({\n                isSmile:false\n            })\n        }\n    }\n    toggleFinished=()=>{\n        if(this.state.count === 40){\n            this.setState({\n                isFinished:true\n            })\n        }else{\n            this.setState({\n                isFinished:false\n            })\n        }\n    }\n    render(){\n        return(\n            \n            <>\n                <Header/>\n            </>\n        )\n    }\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}