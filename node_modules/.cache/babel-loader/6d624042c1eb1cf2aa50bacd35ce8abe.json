{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/takashimatakuto/Documents/programming/react_training/src/Main.jsx\";\nimport React from 'react';\nimport Number from './Number';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addCount = () => {\n      this.setState({\n        count: this.state.count + 1\n      });\n    };\n\n    this.toggleSmile = () => {\n      if ((this.state.count + 1) % 3 === 0 || (this.state.count - 10) % 3 === 0 || this.state.count1 % 3 === 0) {\n        this.setState({\n          isSmile: true\n        });\n      } else {\n        this.setState({\n          isSmile: false\n        });\n      }\n    };\n\n    this.toggleFinished = () => {\n      if (this.state.count === 40) {\n        this.setState({\n          isFinished: true\n        });\n      } else {\n        this.setState({\n          isFinished: false\n        });\n      }\n    };\n\n    this.state = {\n      count: 0,\n      isSmile: false,\n      isFinished: false\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.state.count > 41) {\n      this.setState({\n        count: 0\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Number, {\n        count: this.state.count,\n        add: () => {\n          this.addCount();\n        },\n        toggleSmile: () => {\n          this.toggleSmile();\n        },\n        isSmile: this.state.isSmile,\n        isFinished: this.state.isFinished,\n        toggleFinished: () => {\n          this.toggleFinished();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/takashimatakuto/Documents/programming/react_training/src/Main.jsx"],"names":["React","Number","Main","Component","constructor","props","addCount","setState","count","state","toggleSmile","count1","isSmile","toggleFinished","isFinished","componentDidUpdate","render"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAIA,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAiBlBC,QAjBkB,GAiBP,MAAI;AACX,WAAKC,QAAL,CAAc;AACVC,QAAAA,KAAK,EAAG,KAAKC,KAAL,CAAWD,KAAX,GAAiB;AADf,OAAd;AAGH,KArBiB;;AAAA,SAsBlBE,WAtBkB,GAsBN,MAAI;AACZ,UAAG,CAAC,KAAKD,KAAL,CAAWD,KAAX,GAAiB,CAAlB,IAAuB,CAAvB,KAA6B,CAA7B,IAAkC,CAAC,KAAKC,KAAL,CAAWD,KAAX,GAAiB,EAAlB,IAAwB,CAAxB,KAA8B,CAAhE,IAAsE,KAAKC,KAAL,CAAWE,MAAZ,GAAsB,CAAtB,KAA4B,CAApG,EAAsG;AAClG,aAAKJ,QAAL,CAAc;AACVK,UAAAA,OAAO,EAAC;AADE,SAAd;AAGH,OAJD,MAIK;AACD,aAAKL,QAAL,CAAc;AACVK,UAAAA,OAAO,EAAC;AADE,SAAd;AAGH;AACJ,KAhCiB;;AAAA,SAiClBC,cAjCkB,GAiCH,MAAI;AACf,UAAG,KAAKJ,KAAL,CAAWD,KAAX,KAAqB,EAAxB,EAA2B;AACvB,aAAKD,QAAL,CAAc;AACVO,UAAAA,UAAU,EAAC;AADD,SAAd;AAGH,OAJD,MAIK;AACD,aAAKP,QAAL,CAAc;AACVO,UAAAA,UAAU,EAAC;AADD,SAAd;AAGH;AACJ,KA3CiB;;AAEd,SAAKL,KAAL,GAAW;AACPD,MAAAA,KAAK,EAAC,CADC;AAEPI,MAAAA,OAAO,EAAC,KAFD;AAGPE,MAAAA,UAAU,EAAE;AAHL,KAAX;AAKH;;AAGDC,EAAAA,kBAAkB,GAAE;AAChB,QAAG,KAAKN,KAAL,CAAWD,KAAX,GAAkB,EAArB,EAAwB;AACpB,WAAKD,QAAL,CAAc;AACVC,QAAAA,KAAK,EAAC;AADI,OAAd;AAGH;AACJ;;AA4BDQ,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,6BACI,QAAC,MAAD;AACI,QAAA,KAAK,EAAI,KAAKP,KAAL,CAAWD,KADxB;AAEI,QAAA,GAAG,EAAG,MAAI;AAAC,eAAKF,QAAL;AAAgB,SAF/B;AAGI,QAAA,WAAW,EAAI,MAAI;AAAC,eAAKI,WAAL;AAAmB,SAH3C;AAII,QAAA,OAAO,EAAI,KAAKD,KAAL,CAAWG,OAJ1B;AAKI,QAAA,UAAU,EAAI,KAAKH,KAAL,CAAWK,UAL7B;AAMI,QAAA,cAAc,EAAI,MAAI;AAAC,eAAKD,cAAL;AAAsB;AANjD;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AAYH;;AA1D6B;;AA6DlC,eAAeX,IAAf","sourcesContent":["import React from 'react';\nimport Number from './Number';\n\n\n\nclass Main extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            count:0,\n            isSmile:false,\n            isFinished :false\n        }\n    }\n    \n    \n    componentDidUpdate(){\n        if(this.state.count >41){\n            this.setState({\n                count:0\n            })\n        }\n    }\n    addCount = ()=>{\n        this.setState({\n            count : this.state.count+1\n        });\n    }\n    toggleSmile=()=>{\n        if((this.state.count+1) % 3 === 0 || (this.state.count-10) % 3 === 0 || (this.state.count1) % 3 === 0){\n            this.setState({\n                isSmile:true\n            })\n        }else{\n            this.setState({\n                isSmile:false\n            })\n        }\n    }\n    toggleFinished=()=>{\n        if(this.state.count === 40){\n            this.setState({\n                isFinished:true\n            })\n        }else{\n            this.setState({\n                isFinished:false\n            })\n        }\n    }\n    render(){\n        return(\n            <>\n                <Number\n                    count = {this.state.count}\n                    add ={()=>{this.addCount()}}\n                    toggleSmile = {()=>{this.toggleSmile()}}\n                    isSmile = {this.state.isSmile}\n                    isFinished = {this.state.isFinished}\n                    toggleFinished =ã€€{()=>{this.toggleFinished()}}\n                />\n            </>\n        )\n    }\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}